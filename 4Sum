vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>>res;
        int n=nums.size();
        if(nums.empty()){
            return res;
        }
        sort(nums.begin(),nums.end());
        for(int i=0; i<n; i++){
            for(int j=i+1; j<n; j++){
                int target_2=target-nums[j]-nums[i];
                int left=j+1;
                int right=n-1;
                while(left<right){
                    int sum=nums[left]+nums[right];
                    if(sum<target_2){
                        left++;
                    }
                    else if(sum>target_2){
                        right--;
                    }
                    else{
                        vector<int>quadruplets(4,0);
                        quadruplets[0]=nums[i];
                         quadruplets[1]=nums[j];
                         quadruplets[2]=nums[left];
                          quadruplets[3]=nums[right];
                        res.push_back( quadruplets);
                        while(left<right && nums[left]==quadruplets[2]){
                            left++;
                        }
                        while(left<right && nums[right]==quadruplets[3]){
                            right--;
                        }
                    }
                    
                
                }
                while(j+1<n && nums[j+1]==nums[j]){
                    j++;
                }
                while(i+1<n && nums[i+1]==nums[i]){
                    i++;
                }
            }
        }
        return res;
    }
